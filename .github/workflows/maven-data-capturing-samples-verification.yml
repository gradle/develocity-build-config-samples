name: Verify Maven Data Capturing Samples

on: [ push, pull_request, workflow_dispatch ]

jobs:
  verification:
    name: Verification of ${{ matrix.name }}
    runs-on: ubuntu-latest
    env:
      LOG_MSG_EXTENSION_LOADED: "Build operation 'Gradle Enterprise mojo execution' completed"
      LOG_MSG_EXECUTION_FAILED: "Error executing a GradleEnterpriseListener callback"
    strategy:
      matrix:
        include:
          - name: 'GE Maven extension version'
            sample-file: 'capture-ge-extension-version/maven-ge-extension-version.groovy'
          - name: 'OS processes'
            sample-file: 'capture-os-processes/maven-os-processes.groovy'
          - name: 'Processor arch'
            sample-file: 'capture-processor-arch/maven-processor-arch.groovy'
          - name: 'Profiles'
            sample-file: 'capture-profiles/maven-profiles.groovy'
          - name: 'Quality checks'
            sample-file: 'capture-quality-check-issues/maven-quality-check-issues.groovy'
          - name: 'Thermal throttling'
            sample-file: 'capture-thermal-throttling/maven-thermal-throttling.groovy'
          - name: 'Top-level project'
            sample-file: 'capture-top-level-project/maven-top-level-project.groovy'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Provide data capture script to Maven build
        run: |
            # copy over sample script such that it gets pulled in by the GE extension
            cp build-data-capturing-maven-samples/${{ matrix.sample-file }} common-gradle-enterprise-maven-configuration/.mvn/gradle-enterprise-custom-user-data.groovy
      - name: Run Maven build
        id: mvn-build
        run: |
          delimiter="$(openssl rand -hex 8)"
          echo "mavenOutput<<${delimiter}" >> $GITHUB_OUTPUT
          echo "$(mvn -f common-gradle-enterprise-maven-configuration/pom.xml -Dgradle.enterprise.url=https://ge.solutions-team.gradle.com -X -B clean validate)" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
      - name: Validate extension loaded
        # Asserting that extension was loaded checking a log entry
        run: exit 1
        if:  ${{ !contains(steps.mvn-build.outputs.mavenOutput, env.LOG_MSG_EXTENSION_LOADED) }}
      - name: Validate extension executed
        # Asserting that extension was run successfully checking absence of an error log entry
        run: exit 1
        if:  contains(steps.mvn-build.outputs.mavenOutput, env.LOG_MSG_EXECUTION_FAILED)
